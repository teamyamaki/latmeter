<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>現在位置の表示</title>
  <% include ../common/_head.ejs %>
</head>
<body>
<div id="geoLocationIndex" data-role="page" data-url="/geoLocation">
  <div data-role="header" data-position="fixed">
    <h1>位置情報</h1>
  </div>

  <div data-role="content">
    <style>
      #map {
        width: 100%;
        height: 300px;
        border: solid 1px #ccc;
      }
    </style>
    <div id="map"></div>
    <!--<div id="latitude"></div>
    <div id="longitude"></div>
    <div id="accuracy"></div>
    <div id="timestamp"></div>
    <div id="elapsedTime">経過時間：----</div>-->

    <input id="ridingId" type="hidden" value=""/>
    <input id="RecordLocation" type="Button" Value="タクシー乗車"/>
  </div>

  <div data-role="footer" data-position="fixed">
    <a href="/" data-rel="back">戻る</a>
  </div>

<script src="http://maps.googleapis.com/maps/api/js?v=3&sensor=true&callback=initLocation"></script>
<script>

//監視識別ID
var watch_id = 0;

//記録開始日時
var startDateTime;

//最新緯度・経度
var latitude = 0;
var longitude = 0;

//乗車ID
var ridingId = "";

//GeoLocationAPIのオプション
var option = {
		enableHighAccuracy:true,
		timeout:10000,
		maximumAge:0
};

var geoLocations = <%-JSON.stringify(geoLocations)%>;

var map;
var bounds;

var goldStar = {
		path: 'M 125,5 155,90 245,90 175,145 200,230 125,180 50,230 75,145 5,90 95,90 z',
		fillColor: "yellow",
		fillOpacity: 0.8,
		scale: 1,
		strokeColor: "gold",
		strokeWeight: 14
};

//RidingId生成
function createRidingId(latitude,longitude)
{
	return $.now()+'@'+latitude+'@'+longitude;
}

//位置設定
function initLocation(){

	if(geoLocations != ''){
		displayTrackOnMap(geoLocations);
	}else{
		ridingId = "";
		navigator.geolocation.getCurrentPosition(successCallback, errorCallback);
	}
}

//評価画面に遷移
function goTaxiReview(){
	$.mobile.changePage('/taxi/add', { transition:'slide', reverse: false, reloadPage: true, data : 'ridingId=' + $('#ridingId').val() });
}

//位置情報をサーバに送信（計測中のみ）
function sendGeoLocation() {
  console.log(latitude + ' ' + longitude);

  var params = {
    latitude: latitude,
    longitude: longitude,
    ridingId: ridingId
  };

	$.post("/geoLocation", params);
}

//位置情報取得失敗時のコールバック
function errorCallback(error) {

	var err_msg = "";
	switch(error.code)
	{
	case 1:
		err_msg = "位置情報の利用が許可されていません";
		break;
	case 2:
		err_msg = "デバイスの位置が判定できません";
		break;
	case 3:
		err_msg = "タイムアウトしました";
		break;
	}
	alert(err_msg);
}

//マーカーを追加
function addMarker(geoloc) {
	console.log("latitude : " + geoloc.latitude);
	console.log("longitude : " + geoloc.longitude);

	marker = new google.maps.Marker({
		position: new google.maps.LatLng(geoloc.latitude, geoloc.longitude),
		map: map,
		title: geoloc.createdAt
//		icon: goldStar
	});

	// extend the bounds to include each marker's position
	bounds.extend(marker.position);

	var infowindow = new google.maps.InfoWindow({
	});

	google.maps.event.addListener(marker, 'click', (function(marker, i) {
		return function() {
			infowindow.setContent('<span>'+geoloc.latitude.toString() + '</span>');
			infowindow.open(map, marker);
		}
	})(marker, i));

}

//経路を表示
function displayTrackOnMap(geoLocs){

	if(google.maps.MapTypeId){
		var options = {
				mapTypeId: google.maps.MapTypeId.ROADMAP
		};

		map = new google.maps.Map($("#map").get(0), options);
		bounds = new google.maps.LatLngBounds();

		var coordinates = [];

		for (i = 0; i < geoLocs.length; i++) {
			addMarker(geoLocs[i]);
			coordinates[i] =  new google.maps.LatLng(geoLocs[i].latitude, geoLocs[i].longitude);
		}

		var lineSymbol = {
				path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW
		};

		var flightPath = new google.maps.Polyline({
			path: coordinates,
			strokeColor: '#FF0000',
			strokeOpacity: 1.0,
			strokeWeight: 3,
			icons: [{
				icon: lineSymbol,
				offset: '100%',
				repeat:'15%'
			}],
			map: map
		});

		console.log(bounds.getCenter());
		map.fitBounds(bounds);
		map.panToBounds(bounds);

		var listener = google.maps.event.addListener(map, "idle", function () {
			google.maps.event.removeListener(listener);
		});
		
		marker.setPosition(bounds.getCenter());
		map.setCenter(bounds.getCenter());
	}
}

//位置情報成功時のコールバック
function successCallback(event) {

	console.log("successCallback: " + geoLocations);
	// 緯度
	latitude = event.coords.latitude;
	// $('#latitude').html('<span>緯度:'+latitude+'</span>');

	// 経度
	longitude = event.coords.longitude;
	// $('#longitude').html('<span>経度:'+longitude+'</span>');

	// 精度
	// var accuracy = event.coords.accuracy;
	// $('#accuracy').html('<span>誤差:'+accuracy+'</span>');

	// タイムスタンプ
	// var date = event.timestamp;
	// if( typeof(date) == "number" ) {
	// date = new Date(date);
	// }

	// if( typeof(date) == "number" ) {
	// date = new Date(date);
	// }
	// $('#timestamp').html( date.toString());

	var latLng =new google.maps.LatLng(latitude, longitude);

	var options = {
			zoom: 15,
			center:latLng,
			mapTypeId: google.maps.MapTypeId.ROADMAP
	};

	map = new google.maps.Map($("#map").get(0), options);

	var marker = new google.maps.Marker({
		position: latLng,
		map: map,
		title: '現在地'
	});

	// $('#elapsedTime').html('経過時間ミリ秒:'+ ($.now() - startDateTime ))

	if(watch_id != 0){
		sendGeoLocation();
	}
}

//画面初期化時
$('#geoLocationIndex').bind('pageinit', function() {

	console.log("geoLocations: " + geoLocations);

	if(geoLocations != ''){
		//今のところここでは何もしない。
	}else{

		$("#RecordLocation").bind("click", function(){
			if( watch_id > 0 ) {

				window.navigator.geolocation.clearWatch(watch_id);

				watch_id = 0;

				$('#RecordLocation').prop('value','タクシー乗車').button("refresh");

				startDateTime = null;
				$('#elapsedTime').html('経過時間ミリ秒:----')

				goTaxiReview();

			}else{

				watch_id = navigator.geolocation.watchPosition(successCallback,errorCallback, option);

				$('#RecordLocation').prop('value','タクシー降車').button("refresh");

				startDateTime = $.now();

				$('#elapsedTime').html('経過時間ミリ秒:'+ ($.now() - startDateTime))

				ridingId = createRidingId(latitude,longitude);

				$('#ridingId').val(ridingId);

			}
		});
	}	
});

//画面表示時
$('#geoLocationIndex').bind('pageshow',   function() {

	console.log("pageshow");

	if(geoLocations != ''){
		$("#RecordLocation").parent().hide();
	}else{
		$("#RecordLocation").parent().show();
	}
});

</script>

</div>

</body>
</html>
